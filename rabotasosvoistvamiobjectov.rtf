{\rtf1\ansi\ansicpg1251\deff0\nouicompat\deflang1049{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset204 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 // \f1\lang1049\'c2\'fb\'e2\'ee\'e4 \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'e8 \'ee \'f1\'ee\'f2\'f0\'f3\'e4\'ed\'e8\'ea\'e5 \'e2 \'ea\'ee\'ed\'f1\'ee\'eb\'fc\par
console.log(employee1.getInfo()); // \'c8\'e2\'e0\'ed \'c8\'e2\'e0\'ed\'ee\'e2\'e8\'f7 (30 \'eb\'e5\'f2), \'cc\'e5\'ed\'e5\'e4\'e6\'e5\'f0, 5 \'eb\'e5\'f2 \'ee\'ef\'fb\'f2\'e0, \'e7\'e0\'f0\'ef\'eb\'e0\'f2\'e0 50000 \'f0\'f3\'e1.\par
// \'d1\'ee\'e7\'e4\'e0\'ed\'e8\'e5 \'ee\'e1\'fa\'e5\'ea\'f2\'e0 \'ea\'eb\'e0\'f1\'f1\'e0 Employee\par
const employee1 = new Employee('\'c8\'e2\'e0\'ed \'c8\'e2\'e0\'ed\'ee\'e2\'e8\'f7', '\'cc\'e5\'ed\'e5\'e4\'e6\'e5\'f0', 30, 5, 50000);\par
// \'cc\'e5\'f2\'ee\'e4 \'e4\'eb\'ff \'e2\'fb\'e2\'ee\'e4\'e0 \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'e8 \'ee \'f1\'ee\'f2\'f0\'f3\'e4\'ed\'e8\'ea\'e5\par
getInfo() \{\par
return `$\{this.name\} ($\{this.age\} \'eb\'e5\'f2), $\{this.position\}, $\{this.experience\} \'eb\'e5\'f2 \'ee\'ef\'fb\'f2\'e0, \'e7\'e0\'f0\'ef\'eb\'e0\'f2\'e0 $\{this.salary\} \'f0\'f3\'e1.`;\par
\}\par
\par
// \'ca\'eb\'e0\'f1\'f1 Employee \'e4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'fb \'f1 \'f1\'ee\'f2\'f0\'f3\'e4\'ed\'e8\'ea\'e0\'ec\'e8\par
class Employee \{\par
constructor(name, position, age, experience, salary) \{\par
this.name = name;\par
this.position = position;\par
this.age = age;\par
this.experience = experience;\par
this.salary = salary;\par
\}\par
\par
// \'cf\'f0\'e8\'ec\'e5\'f0 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff \'ea\'eb\'e0\'f1\'f1\'e0 Employee\par
const employee1 = new Employee('\'c8\'e2\'e0\'ed \'c8\'e2\'e0\'ed\'ee\'e2\'e8\'f7', '\'cc\'e5\'ed\'e5\'e4\'e6\'e5\'f0', 30, 5, 50000);\par
console.log(employee1.getInfo()); // \'c8\'e2\'e0\'ed \'c8\'e2\'e0\'ed\'ee\'e2\'e8\'f7 (30 \'eb\'e5\'f2), \'cc\'e5\'ed\'e5\'e4\'e6\'e5\'f0, 5 \'eb\'e5\'f2 \'ee\'ef\'fb\'f2\'e0, \'e7\'e0\'f0\'ef\'eb\'e0\'f2\'e0 50000 \'f0\'f3\'e1.\par
\par
// \'ca\'eb\'e0\'f1\'f1 Employee \'e4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'fb \'f1 \'f1\'ee\'f2\'f0\'f3\'e4\'ed\'e8\'ea\'e0\'ec\'e8\par
\par
class Employee \{\par
constructor(name, position, age, experience, salary) \{\par
this.name = name;\par
this.position = position;\par
this.age = age;\par
this.experience = experience;\par
this.salary = salary;\par
\}\par
\par
// \'cc\'e5\'f2\'ee\'e4\'fb \'e4\'eb\'ff \'ef\'ee\'eb\'f3\'f7\'e5\'ed\'e8\'ff \'e8 \'e8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'ff \'f1\'e2\'ee\'e9\'f1\'f2\'e2 \'f1\'ee\'f2\'f0\'f3\'e4\'ed\'e8\'ea\'e0\par
getName() \{\par
return this.name;\par
\}\par
\par
setName(name) \{\par
this.name = name;\par
\}\par
\par
getPosition() \{\par
return this.position;\par
\}\par
\par
setPosition(position) \{\par
this.position = position;\par
\}\par
\par
getAge() \{\par
return this.age;\par
\}\par
\par
setAge(age) \{\par
this.age = age;\par
\}\par
\par
getExperience() \{\par
return this.experience;\par
\}\par
\par
setExperience(experience) \{\par
this.experience = experience;\par
\}\par
\par
getSalary() \{\par
return this.salary;\par
\}\par
\par
setSalary(salary) \{\par
this.salary = salary;\par
\}\f0\lang9\par
}
```javascript
// Массив из городов
var cities = ["Москва", "Санкт-Петербург", "Новгород", ...];

// Случайный город для начала игры
var selectedCityIndex = Math.floor(Math.random() * cities.length);
var selectedCity = cities[selectedCityIndex];

// Массив уже использованных городов
var usedCities = [selectedCity];

// Функция проверки ответа игрока
function checkAnswer(inputCity) {
var lastLetter = selectedCity[selectedCity.length - 1].toLowerCase();
inputCity = inputCity.toLowerCase();
if (inputCity[0] !== lastLetter) {
alert("Введите имя города, начинающееся на букву " + lastLetter.toUpperCase());
} else if (usedCities.includes(inputCity)) {
alert("Этот город уже был использован");
} else if (!cities.includes(inputCity)) {
alert("Такого города нет в списке");
} else {
// Добавление города в список использованных
usedCities.push(inputCity);
// Выбор нового города
for (var i = 0; i < cities.length; i++) {
if (cities[i][0] === inputCity[inputCity.length - 1].toUpperCase() && !usedCities.includes(cities[i])) {
selectedCityIndex = i;
selectedCity = cities[i];
break;
}
}
// Отображение списка использованных городов
var usedCitiesList = "";
for (var i = 0; i < usedCities.length; i++) {
usedCitiesList += usedCities[i] + ", ";
}
document.getElementById("used-cities").innerHTML = usedCitiesList;
}
}

// Обработка ввода игрока
var input = document.getElementById("input-city");
var button = document.getElementById("submit");
button.addEventListener("click", function() {
checkAnswer(input.value);
input.value = "";
});
```

Этот код содержит массив городов, случайный выбор города для начала игры, проверку правильности ответа игрока и отображение списка использованных городов. Однако этого недостаточно для создания полноценного сайта. Вам нужно будет добавить HTML и CSS-код, включивший в себя элементы для начала игры, ввода ответа игрока, отображения актуального города и списка использованных городов.

```java
public class User {
private String name;
private int age;

public User(String name, int age) {
this.name = name;
this.age = age;
}

public void show() {
System.out.println("Name: " + name + ", Age: " + age);
}
}
```

Метод `show()` выводит имя и возраст пользователя на консоль. В конструкторе инициализируются поля `name` и `age`.
```java
public class Rectangle {
private double length;
private double width;

public Rectangle(double length, double width) {
this.length = length;
this.width = width;
}

public double getSquare() {
return length * width;
}
}
```

Метод `getSquare()` возвращает площадь прямоугольника, которая вычисляется как произведение длины на ширину. В конструкторе инициализируются поля `length` и `width`. Данный пример не содержит геттеров и сеттеров для полей класса Rectangle, но их также можно добавить для получения и задания значений длины и ширины.
